{"version":3,"sources":["components/Layout.tsx","components/widgets/button/Button.tsx","components/pages/HomePage.tsx","components/widgets/searchbox/SearchBox.tsx","components/pages/AboutPage.tsx","components/Router.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Layout","props","state","current","className","href","this","onClick","sendRoute","children","React","Component","Button","type","onEvent","HomePage","alert","SearchBox","placeholder","onChange","e","target","value","AboutPage","text","setState","Router","getRoute","route","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gRAEqBA,E,kDAEjB,WAAYC,GAAc,IAAD,8BACrB,cAAMA,IAEDC,MAAQ,CACTC,QAASF,EAAME,SAJE,E,0CAQzB,WAAS,IAAD,OACJ,OACI,iCACE,qBAAKC,UAAU,wBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,gBAAf,SACE,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,4BAIF,qBAAID,UAAU,iBAAd,UACE,oBAAIA,UAAkC,KAAvBE,KAAKL,MAAME,QAAiB,SAAW,GAAtD,SACE,mBAAGC,UAAU,cAAcC,KAAK,IAAIE,QAAS,kBAAM,EAAKN,MAAMO,UAAU,KAAxE,oBAEF,oBAAIJ,UAAkC,UAAvBE,KAAKL,MAAME,QAAsB,SAAW,GAA3D,SACE,mBAAGE,KAAK,IAAIE,QAAS,kBAAM,EAAKN,MAAMO,UAAU,UAAhD,qBAEF,6BACE,mBAAGH,KAAK,IAAR,sBAEF,6BACE,mBAAGA,KAAK,IAAR,8BAKPC,KAAKL,MAAMQ,gB,GApCUC,IAAMC,WCgB3BC,G,MAjBA,SAACX,GACZ,OAEI,wBAAQG,UAAU,SAASS,KAAMZ,EAAMY,KAAMN,QAAS,kBAAMN,EAAMa,WAAlE,SACKb,EAAMQ,aCOJM,EATE,WACb,OACI,sBAAKX,UAAU,YAAf,UACI,wDACA,cAAC,EAAD,CAAQS,KAAK,SAASC,QAAS,WAAOE,MAAM,iBAA5C,2BCOGC,EAbG,SAAChB,GAEf,OACI,uBAAOG,UAAU,eAAeS,KAAK,SAASK,YAAajB,EAAMiB,YAAaC,SAAU,SAACC,GAAD,OAAOnB,EAAMa,QAAQM,EAAEC,OAAOC,WCDzGC,E,kDAEjB,WAAYtB,GAAe,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CACTsB,KAAM,IAHY,E,0CAO1B,WAAS,IAAD,OAEJ,OACI,gCACI,yDACA,cAAC,EAAD,CAAWN,YAAY,gBAAgBJ,QAAS,SAACM,GAAD,OAAW,EAAKK,SAAS,CAACD,KAAMJ,OAChF,4BAAId,KAAKJ,MAAMsB,c,GAfQd,IAAMC,WCIxBe,E,kDAEjB,WAAYzB,GAAc,IAAD,8BACrB,cAAMA,IAMV0B,SAAW,SAACC,GACR,EAAKH,SAAS,CAACtB,QAASyB,KANxB,EAAK1B,MAAQ,CACTC,QAAS,IAHQ,E,0CAWzB,WACI,MAA0B,UAAvBG,KAAKJ,MAAMC,QAEN,cAAC,EAAD,CAAQK,UAAWF,KAAKqB,SAAUxB,QAASG,KAAKJ,MAAMC,QAAtD,SACI,cAAC,EAAD,MAKR,cAAC,EAAD,CAAQK,UAAWF,KAAKqB,SAAUxB,QAASG,KAAKJ,MAAMC,QAAtD,SACI,cAAC,EAAD,U,GAvBoBO,IAAMC,WCM3BkB,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a784e9e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default class Layout extends React.Component<IProps,IState>{\r\n\r\n    constructor(props:IProps){\r\n        super(props);\r\n\r\n        this.state = {\r\n            current: props.current\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <span>\r\n              <nav className=\"navbar navbar-inverse\">\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"navbar-header\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                      Routing Demo\r\n                    </a>\r\n                  </div>\r\n                  <ul className=\"nav navbar-nav\">\r\n                    <li className={this.props.current === '' ? 'active' : ''}>\r\n                      <a className=\"navbar-item\" href=\"#\" onClick={() => this.props.sendRoute('')}>Home</a>\r\n                    </li>\r\n                    <li className={this.props.current === 'about' ? 'active' : ''}>\r\n                      <a href=\"#\" onClick={() => this.props.sendRoute('about')}>About</a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"#\">Page 2</a>\r\n                    </li>\r\n                    <li>\r\n                      <a href=\"#\">Page 3</a>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </nav>\r\n              {this.props.children}\r\n            </span>\r\n          );\r\n    }\r\n\r\n}\r\n\r\ninterface IProps{\r\n    current: string,\r\n    sendRoute: any\r\n}\r\n\r\ninterface IState{\r\n    current: string\r\n}\r\n\r\n","import './Button.css';\r\nconst Button = (props: IProps) =>{\r\n    return (\r\n\r\n        <button className=\"button\" type={props.type} onClick={() => props.onEvent()}>\r\n            {props.children}\r\n        </button>\r\n    );\r\n}\r\n\r\n\r\n\r\ninterface IProps{\r\n    onEvent: any;\r\n    type: any;\r\n    children: any;\r\n}\r\n\r\nexport default Button;","\r\nimport Button from './../widgets/button/Button';\r\n\r\nconst HomePage = () =>{\r\n    return(\r\n        <div className=\"container\">\r\n            <h1>This is the Home page.</h1>\r\n            <Button type=\"button\" onEvent={() => {alert(\"Button Click\")}}>Click me!</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","\r\nconst SearchBox = (props: IProps) => {\r\n    //The e represents the input as a whole.  It's value is then passed as an argument to the call back function\r\n    return(\r\n        <input className=\"form-control\" type=\"search\" placeholder={props.placeholder} onChange={(e) => props.onEvent(e.target.value)} />\r\n    );\r\n}\r\n\r\n\r\ninterface IProps{\r\n    placeholder: string;\r\n    onEvent: any;\r\n}\r\n\r\nexport default SearchBox;","import SearchBox from './../widgets/searchbox/SearchBox';\r\nimport React from 'react';\r\n\r\nexport default class AboutPage extends React.Component<IProps,IState>{\r\n\r\n    constructor(props: IProps){\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    render(){\r\n        //The arrow function takes an e parameter that is then passed to the set state.\r\n        return(\r\n            <div>\r\n                <h1>This is the About page.</h1>\r\n                <SearchBox placeholder=\"Type Anything\" onEvent={(e:any) => this.setState({text: e})} />\r\n                <p>{this.state.text}</p>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\ninterface IState{\r\n    text: string;\r\n}","import React from 'react';\r\nimport Layout from './Layout';\r\n\r\n//Pages\r\nimport HomePage from './pages/HomePage';\r\nimport AboutPage from './pages/AboutPage';\r\n\r\nexport default class Router extends React.Component<IProps,IState>{\r\n\r\n    constructor(props:IProps){\r\n        super(props);\r\n        this.state = {\r\n            current: ''\r\n        }\r\n    }\r\n\r\n    getRoute = (route: string) =>{\r\n        this.setState({current: route});\r\n    }\r\n\r\n    render(){\r\n        if(this.state.current === 'about'){\r\n            return(\r\n                <Layout sendRoute={this.getRoute} current={this.state.current}>\r\n                    <AboutPage />\r\n                </Layout>\r\n            );\r\n        }\r\n        return(\r\n            <Layout sendRoute={this.getRoute} current={this.state.current}>\r\n                <HomePage />\r\n            </Layout>\r\n        );\r\n    }\r\n\r\n}\r\n\r\ninterface IProps{\r\n\r\n}\r\n\r\ninterface IState{\r\n    current: string;\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Router from './components/Router';\n\nfunction App() {\n  return (\n    <div>\n      <Router />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}